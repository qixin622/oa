<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.4//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.huat.oa.dao.EmployeeDao">

    <resultMap id="employee" type="Employee">
        <id property="sn" column="sn" javaType="String"/>
        <result property="password" column="password" javaType="String"/>
        <result property="name" column="name" javaType="String"/>
        <result property="sex" column="sex" javaType="String"/>
        <result property="birthday" column="birthday" javaType="java.util.Date"/>
        <result property="qualification" column="qualification" javaType="String"/>
        <result property="departmentSn" column="department_sn" javaType="String"/>
        <result property="post" column="post" javaType="String"/>
        <result property="imgUrl" column="img_url" javaType="String"/>
        <result property="role" column="role" javaType="String"/>
        <association property="department" column="department_sn" javaType="Department" >
            <id property="sn" column="dsn" javaType="String"/>
            <result property="name" column="dname" javaType="String"/>
        </association>
    </resultMap>


    <insert id="insert" parameterType="Employee">
        insert into employee values(#{sn},#{password},#{name},#{sex},#{birthday},#{qualification},#{departmentSn},#{post},#{imgUrl},#{role})
    </insert>

    <update id="update" parameterType="Employee">
        update employee
        <set>
            <if test="password!=null">password=#{password},</if>
            <if test="name!=null">name=#{name},</if>
            <if test="sex!=null">sex=#{sex},</if>
            <if test="birthday!=null">birthday=#{birthday},</if>
            <if test="qualification!=null">qualification=#{qualification},</if>
            <if test="departmentSn!=null">department_sn=#{departmentSn},</if>
            <if test="post!=null">post=#{post},</if>
            <if test="imgUrl!=null">img_url=#{imgUrl},</if>
            <if test="role!=null">role=#{role},</if>
        </set>
        where sn=#{sn}
    </update>

    <delete id="delete" parameterType="String">
        delete from employee where sn=#{sn}
    </delete>

    <delete id="deleteBatch" parameterType="java.util.Arrays">
        delete from employee where sn in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

    <select id="select" parameterType="String" resultMap="employee">
        select e.*,d.sn dsn,d.name dname from employee e left join department d on d.sn=e.department_sn
         where e.sn=#{sn}
    </select>

    <select id="selectByPost" parameterType="String" resultMap="employee">
        select e.*,d.sn dsn,d.name dname from employee e left join department d on d.sn=e.department_sn
         where e.post=#{post}
    </select>

    <select id="selectAll" resultMap="employee">
        select e.*,d.sn dsn,d.name dname from employee e left join department d on d.sn=e.department_sn
    </select>

    <select id="selectByDepartmentAndPost" resultMap="employee">
        select e.*,d.sn dsn,d.name dname from employee e left join department d on d.sn=e.department_sn
        where e.sn is not NULL
        <if test="dsn!=null">
            and e.department_sn=#{dsn}
        </if>
        <if test="post!=null">
            and e.post=#{post}
        </if>
    </select>
    <select id="selectBy" parameterType="String" resultMap="employee">
        select e.*,d.sn dsn,d.name dname from employee e left join department d on d.sn=e.department_sn
         where e.sn is not NULL
         <if test="type == 'sn'">
             and e.sn LIKE CONCAT('%',#{text},'%')
         </if>
        <if test="type == 'name'">
            and e.name LIKE CONCAT('%',#{text},'%')
        </if>
        <if test="type == 'dname'">
            and dname LIKE CONCAT('%',#{text},'%')
        </if>
    </select>

</mapper>